@model ElsevierMaterialsMVC.Models.MaterialDetails.MaterialDetailsModel
@using ElsevierMaterialsMVC.Models.MaterialDetails;
@using ElsevierMaterials.Models;
@{int cnt = 0;}

<script type="text/javascript" src="~/Scripts/MaterialDetails/StressStrainPlot.js"></script>
<script type="text/javascript" src="~/Scripts/MaterialDetails/FatiguePlot.js"></script>
<script type="text/javascript" src="~/Scripts/MaterialDetails/ChemicalMaterialsPlot.js"></script>
<script type="text/javascript" src="~/Scripts/MaterialDetails/PhysicalPlot.js"></script>
<script type="text/javascript" src="~/Scripts/MaterialDetails/MechanicalPlot.js"></script>

<div id="groupsContainer" class="accordionDarkContainer">
    @Html.HiddenFor(m => m.Material.SourceMaterialId, new { @id = "materialId" })
    @Html.HiddenFor(m => m.Material.SubgroupId, new { @id = "subgroupId" })

    @foreach (var item in Model.Properties.ProductGroups)
    {
        if (item.Key != ProductGroup.ProductGroupType.Chemical)
        {
            cnt++;
            if (Model.Material.SourceId == 1)
            {
                string chemical = "false";
                if (Model.IsChemical)
                {
                    chemical = "true";
                }
        <div class="accordion" indexofaccordionparent="@((int)item.Key)" id="propAccordion_@(((int)item.Key).ToString())">
            <h4 class="accordion-header" indexofaccordion="@((int)item.Key)"  onclick="materialDetails.getPropertyGroupDetails(@((int)item.Key),'@chemical');return false;">
                <span class="title">@item.Value.ProductGroupName @(item.Value.PropertyCount != 0 ? " (" + item.Value.PropertyCount + ")" : "")</span>
            </h4>
            <div class="accordion-content" id="accordion-content_@((int)item.Key)">
                @if (Model.IsChemical)
                {
                    @Html.Partial("ChemicalGroupContent", item.Value)
                }
                else
                {
                    @Html.Partial("GroupContent", item.Value)
                }

            </div>
        </div>
        <div style="clear: both;"></div>
            }
            else
            {
        <div class="accordion" indexofaccordionparent="@((int)item.Key)" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">

            @if (Model.Material.SourceId == 3)
            {
                <h4 class="accordion-header" indexofaccordion="@((int)item.Key)">
                    <span class="title">@item.Value.ProductGroupName @(item.Value.PropertyCount != 0 ? " (" + item.Value.PropertyCount + ")" : "")</span>
                </h4>
            }
            else
            {
                <h4 class="accordion-header" indexofaccordion="@((int)item.Key)" onclick="materialDetails.getPropertyGroupDetails(@((int)item.Key));return false;">
                    <span class="title">@item.Value.ProductGroupName @(item.Value.PropertyCount != 0 ? " (" + item.Value.PropertyCount + ")" : "")</span>
                </h4>

            }

            <div class="accordion-content">
                <div class="conditionContent">
                    @if (item.Value.Conditions.Count > 0)
                    {

                        if (!(item.Value.Conditions.Count == 1 && item.Value.Conditions[0].ConditionName == "As received") && item.Value.Conditions[0].ConditionName.Trim() != "")
                        {
                        @:Material Condition: @Html.DropDownListFor(o => o.Properties.ProductGroups[item.Key].ConditionId, new SelectList(item.Value.Conditions, "ConditionId", "ConditionName"), htmlAttributes: new { @class = "conditions gray", @id = "selectCond_" + (int)item.Key, @onchange = "materialDetails.changeCondition(" + (int)item.Key + ");" })
                                  }
                    }

                </div>

                @for (int i = 0; i < item.Value.Conditions.Count; i++)
                {
                    <div id="cond_@((int)item.Key)_@(item.Value.Conditions[i].ConditionId)" style="@((item.Value.Conditions[i].ConditionId == item.Value.ConditionId) ? "" : "display:none;")">
                        @if (item.Value.Conditions[i].Properties != null && item.Value.Conditions[i].Properties.Count > 0)
                        {
                            string oldPropName = "";
                            int propCout = 0;
                            int propCouter = 0;
                            <table id="tableMaterialDetails_@((int)item.Value.ProductGroupId)" class="details" style="width: 100%; margin-top:0px;">
                                <thead>
                                    <tr>
                                        @if (item.Value.ProductGroupId == ProductGroup.ProductGroupType.Physical)
                                        {
                                            <th style="width: 33%;">Property</th>
                                            <th style="width: 22%;">Value</th>
                                            <th style="width: 20%;">Unit</th>
                                            <th style="width: 20%;">Note</th>
                                            <th style="width: 5%;">&nbsp;</th>
                                        }
                                        else if (item.Value.ProductGroupId == ProductGroup.ProductGroupType.Mechanical)
                                        {
                                            <th style="width: 33%;">Property</th>
                                            <th style="width: 22%;">Value</th>
                                            <th style="width: 20%;">Unit</th>
                                            <th style="width: 20%;">Note</th>
                                            <th style="width: 5%;">&nbsp;</th>
                                        }
                                        else
                                        {
                                            <th style="width: 35%;">Property</th>
                                            <th style="width: 25%;">Value</th>
                                            <th style="width: 20%;">Unit</th>
                                            <th style="width: 20%;">Note</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var itemP in item.Value.Conditions[i].Properties)
                                    {
                                        if (oldPropName != itemP.PropertyName)
                                        {
                                            oldPropName = itemP.PropertyName;
                                            propCout = item.Value.Conditions[i].Properties.Where(p => p.PropertyId == itemP.PropertyId).Count();
                                            propCouter = 0;
                                        }
                                        propCouter++;
                                   
                                        <tr>
                                            <td class="addToComparisonCell">
                                                @if (item.Value.ProductGroupId != ProductGroup.ProductGroupType.Applications)
                                                {
                                                    <div class="checkbox">
                                                        <input type="checkbox" id="tg_@(itemP.PropertyId)_@((int)item.Value.ProductGroupId)_@(item.Value.Conditions[i].ConditionId)_@(itemP.ValueId)" groupid="@((int)item.Value.ProductGroupId)" conditionid="@item.Value.Conditions[i].ConditionId" rowid="@itemP.ValueId" name="@(itemP.PropertyId)_@(itemP.SourcePropertyId)_@(itemP.ChemicalIdentityId)" typeid="@itemP.PropertyId" sourcepropertyid="@itemP.SourcePropertyId" />
                                                        <label for="tg_@(itemP.PropertyId)_@((int)item.Value.ProductGroupId)_@(item.Value.Conditions[i].ConditionId)_@(itemP.ValueId)"></label>
                                                    </div>
                                                }
                                                <div>
                                                    @Html.Raw(itemP.PropertyName)
                                                </div>
                                            </td>
                                            <td>@Html.Raw(itemP.OrigValue)</td>
                                            <td>@Html.Raw(itemP.OrigUnit)</td>
                                            <td>
                                                <div style="float: left">@Html.Raw(itemP.OrigValueText)</div>
                                            </td>


                                            @if (item.Value.ProductGroupId == ProductGroup.ProductGroupType.Physical)
                                            {
                                                if (propCout > 1)
                                                {
                                                    if (propCouter == 1 && itemP.Temperature != null && itemP.OrigValue != null)
                                                    {
                                                <td rowspan="@(propCout)"><a href="#" title="Show diagram for @Html.Raw(itemP.PropertyName)" onclick="physicalPlot.InitDataInitial('@Html.Raw(Json.Encode(Model.Properties.ProductGroups.Values))', '@((int)item.Value.ProductGroupId)'); physicalPlot.PlotChart('@(itemP.PropertyId)', 'tableMaterialDetails_@((int)item.Value.ProductGroupId)', @itemP.SourcePropertyId); return false;">
                                                    <img src="~/Content/images/diag.png" />
                                                </a>
                                                </td>}
                                                    else
                                                    {
                                                <td>&nbsp;</td>
                                                    }
                                                }
                                                else
                                                {
                                                <td>&nbsp;</td>
                                                }
                                            }
                                            else if (item.Value.ProductGroupId == ProductGroup.ProductGroupType.Mechanical)
                                            {
                                                if (propCout > 1)
                                                {
                                                    if (propCouter == 1 && itemP.Temperature != null && itemP.OrigValue != null)
                                                    {
                                                <td rowspan="@(propCout)"><a href="#" title="Show diagram for @Html.Raw(itemP.PropertyName)" onclick="mechanicalPlot.InitDataInitial('@Html.Raw(Json.Encode(Model.Properties.ProductGroups.Values))', '@((int)item.Value.ProductGroupId)'); mechanicalPlot.PlotChart('@(itemP.PropertyId)', 'tableMaterialDetails_@((int)item.Value.ProductGroupId)', @itemP.SourcePropertyId); return false;">
                                                    <img src="~/Content/images/diag.png" /></a>
                                                </td>}
                                                    else
                                                    {
                                                    <td>&nbsp;</td>
                                                    }
                                                }
                                                else
                                                {
                                                <td>&nbsp;</td>
                                                }
                                            }
                                        </tr>
                                   
                                    }
                                </tbody>
                            </table>
                                    if (item.Value.ProductGroupId == ProductGroup.ProductGroupType.Physical)
                                    {
                            <div id="diagPhysicalContainer" style="display: none;">
                                <div style="margin-top: 10px;"><b>Property: </b><span id="diagPhysicalPropertyName"></span></div>
                                <input type="button" onclick="physicalPlot.ShowData(); return false;" id="moreFieldsPhysicalButton" value="Show table" style="margin-top: 10px;" /><br />
                                <br />
                                <div style="float: left; width: 60%;">
                                    <div id="diagPhysicalChart" style="margin-right: 50px;"></div>
                                    <div style="margin-bottom: 20px;"><a id="savePhysical" class="comparison" href="#">save diagram</a></div>
                                </div>
                                <div style="float: right; width: 40%; margin-bottom: 20px;">
                                    <div>
                                        <a href="#" onclick="addPhysicalToComparison(@item.Value.ConditionId); return false;"><img src="~/Content/images/icon-compare-ss.png" /></a>
                                    </div>
                                    <table class="smallSS" id="diagPhysicalTable" style="width: 350px;">
                                        <thead>
                                            <tr>
                                                <th style="width: 175px;">temperature (°C)</th>
                                                <th style="width: 175px;"><span id="diagPhysicalPropertyHeading"></span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                                <div style="clear: both"></div>
                            </div>
                                    }
                                    else if (item.Value.ProductGroupId == ProductGroup.ProductGroupType.Mechanical)
                                    {
                            <div id="diagMechanicalContainer" style="display: none;">
                                <div style="margin-top: 10px;"><b>Property: </b><span id="diagMechanicalPropertyName"></span></div>
                                <input type="button" onclick="mechanicalPlot.ShowData(); return false;" id="moreFieldsMechanicalButton" value="Show table" style="margin-top: 10px;" /><br />
                                <br />
                                <div style="float: left; width: 60%;">
                                    <div id="diagMechanicalChart" style="margin-right: 50px;"></div>
                                    <div style="margin-bottom: 20px;"><a id="saveMechanical" class="comparison" href="#">save diagram</a></div>
                                </div>
                                <div style="float: right; width: 40%; margin-bottom: 20px;">
                                    <div>
                                        <a href="#" onclick="addMechanicalToComparison(@item.Value.ConditionId); return false;"><img src="~/Content/images/icon-compare-ss.png" /></a>
                                    </div>
                                    <table class="smallSS" id="diagMechanicalTable" style="width: 350px;">
                                        <thead>
                                            <tr>
                                                <th style="width: 175px;">temperature (°C)</th>
                                                <th style="width: 175px;"><span id="diagMechanicalPropertyHeading"></span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                                <div style="clear: both"></div>
                            </div>
                                    }


                                    if (item.Value.Conditions[i].SelectedReferences != null && item.Value.Conditions[i].SelectedReferences.Count > 0)
                                    {
                            <br />
                            <span><a id="selectedRefPropLink_@i" onclick="showSelectedRefProp(@i);return false;" href="#">+ </a><b>Reference for the selected material and condition</b></span>
                            <br />
                            <div id="selectedReferenceProp_@i" style="display:none">
                                <table>
                                    <tbody>
                                        @{int cntRef = 0;}
                                        @foreach (var reference in item.Value.Conditions[i].SelectedReferences)
                                        {
                                            cntRef++;
                                            <tr>
                                                <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                                <td>@reference</td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                                    }
                        }
                    </div>
                }
                @if (item.Value.AllReferences != null && item.Value.AllReferences.Count > 0)
                {
                    <br />
                    <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                    <br />
                    <div id="allReferenceProp_@cnt" style="display:none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in item.Value.AllReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
            </div>

        </div>
        <div style="clear: both;"></div>
            }

        }

    }
    @{ int plus = Model.Material.SourceId == 3 ? 1 : 0; }
    @if (plus == 0 && Model.Properties.StressStrain != null && Model.Properties.StressStrain.MaterialConditions.Count > 0)
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">
                <span class="title">stress strain @(Model.Properties.StressStrain.MaterialConditions.Count != 0 ? " (" + Model.Properties.StressStrain.MaterialConditions.Count + ")" : "")</span>
            </h4>
            <div class="accordion-content">
                <div class="conditionContent">
                    <div style="display: none;">
                        <div id="ss_sourceMaterialId">@Model.Material.SourceMaterialId</div>
                        <div id="ss_subgroupId">@Model.Material.SubgroupId</div>
                        <div id="ss_plus">@plus</div>
                    </div>
                    @if (Model.Properties.StressStrain.MaterialConditions.Count > 0 && !(Model.Properties.StressStrain.MaterialConditions.Count == 1 && Model.Properties.StressStrain.MaterialConditions[0].Description == "As received"))
                    {
                        <div class="conditionName">
                            Material Condition:
                        </div>
                        @Html.DropDownListFor(o => o.Properties.StressStrain.MaterialConditions[0].ConditionId, new SelectList(Model.Properties.StressStrain.MaterialConditions, "ConditionId", "Description"), htmlAttributes: new { @class = "conditions gray", @id = "selectedMaterialConditionSS", @onchange = "materialDetails.changeMaterialConditionsSS(" + Model.Material.SourceMaterialId + "," + Model.Material.SubgroupId + ", " + plus + ");" })
                    }
                </div>
                <div id="stressStrainGroup">
                    @Html.Partial("StressStrainGroup", Model.Properties.StressStrain)
                </div>
                <div style="clear: both"></div>
                @if (Model.Properties.StressStrain.AllReferences != null && Model.Properties.StressStrain.AllReferences.Count > 0)
                {
                    <br />
                    <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                    <br />
                    <div id="allReferenceProp_@cnt" style="display:none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in Model.Properties.StressStrain.AllReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
        <div style="clear: both;"></div>
    }



    @if (plus == 1 && Model.Properties.StressStrain != null && Model.Properties.StressStrain.TestConditions != null && Model.Properties.StressStrain.TestConditions.Count > 0)
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">
                <span class="title">stress strain @(Model.Properties.StressStrain.TestConditions.Count != 0 ? " (" + Model.Properties.StressStrain.TestConditions.Count + ")" : "")</span>
            </h4>
            <div class="accordion-content">
                <div class="conditionContent">
                    @if (Model.Properties.StressStrain.TestConditions[0].Condition != null && Model.Properties.StressStrain.TestConditions[0].Condition.Trim() != "")
                    {

                        @:Material Detail: @Html.DropDownListFor(o => o.Properties.StressStrain.TestConditions[0].No, new SelectList(Model.Properties.StressStrain.TestConditions, "No", "Condition"), htmlAttributes: new { @class = "conditions gray", @id = "selectCondSS", @onchange = "materialDetails.changeConditionSSPlus(" + Model.Material.SourceMaterialId + "," + Model.Material.SubgroupId + ", " + plus + ");" })
                     }
                </div>

                <div id="stressStrainPerCondition">
                    @Html.Partial("StressStrainPlus", Model.Properties.StressStrain.TestConditions[0])
                </div>

                <div style="clear: both"></div>
                @if (Model.Properties.StressStrain.AllReferences != null && Model.Properties.StressStrain.AllReferences.Count > 0)
                {
                    <br />
                    <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                    <br />
                    <div id="allReferenceProp_@cnt" style="display:none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in Model.Properties.StressStrain.AllReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
        <div style="clear: both;"></div>
    }
    @{bool chekedStressStrain = false;}
    @if (Model.Properties.FatigueStrain.ConditionList.Count > 0 || Model.Properties.FatigueStress.ConditionList.Count > 0)
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">
                <span class="title">fatigue data  @((Model.Properties.FatigueStrain.ConditionList.Count + Model.Properties.FatigueStress.ConditionList.Count) != 0 ? " (" + (Model.Properties.FatigueStrain.ConditionList.Count + Model.Properties.FatigueStress.ConditionList.Count).ToString() + ")" : "")</span>
            </h4>
            <div class="accordion-content">
                <div style="padding-top: 7px; padding-bottom: 7px;">
                    @if (Model.Properties.FatigueStrain.ConditionList.Count > 0 &&
                        Model.Properties.FatigueStress.ConditionList.Count > 0)
                    {
                        @Html.RadioButton("fatigueStrainStress", 1, true, new { id = "" }) <span><b>Strain Life</b></span>
                        @Html.RadioButton("fatigueStrainStress", 2, false) <span><b>Stress Life</b></span>
                    }

                    @if (Model.Properties.FatigueStrain.ConditionList.Count > 0 &&
                        Model.Properties.FatigueStress.Condition == null)
                    {
                        @Html.RadioButton("fatigueStrainStress", 1, true, new { id = "" }) <span><b>Strain Life</b></span>

                    }

                    @if (Model.Properties.FatigueStrain.Condition == null &&
                        Model.Properties.FatigueStress.ConditionList.Count > 0)
                    {
                        chekedStressStrain = true;
                        @Html.RadioButton("fatigueStrainStress", 2, true, new { id = "" }) <span><b>Stress Life</b></span>
                    }
                </div>

                @if (Model.Properties.FatigueStrain.ConditionList.Count > 0)
                {
                    <div id="strainLife">
                        <div class="conditionContent">
                            @if (Model.Properties.FatigueStrain.MaterialConditions.Count > 0 && !(Model.Properties.FatigueStrain.MaterialConditions.Count == 1 && Model.Properties.FatigueStrain.MaterialConditions[0].Text == "As received"))
                            {
                                <div class="conditionName">
                                    Material Condition:
                                </div>
                                @Html.DropDownListFor(o => o.Properties.FatigueStrain.MaterialConditions[0].Value, new SelectList(Model.Properties.FatigueStrain.MaterialConditions, "Value", "Text"), htmlAttributes: new { @class = "conditions gray", @id = "selectMaterialCondFatigueStrain", @onchange = "materialDetails.changeMaterialConditionsFatigueStrain(" + Model.Material.SourceMaterialId + ");" })
                            }

                        </div>
                        <div id="fatigueStrainGroup">
                            @Html.Partial("FatigueStrainGroup", Model.Properties.FatigueStrain)
                        </div>
                        <div style="clear: both"></div>
                        @if (Model.Properties.FatigueStrain.AllReferences != null && Model.Properties.FatigueStrain.AllReferences.Count > 0)
                        {
                            <br />
                            <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                            <br />
                            <div id="allReferenceProp_@cnt" style="display:none">
                                <table>
                                    <tbody>
                                        @{int cntRef = 0;}
                                        @foreach (var reference in Model.Properties.FatigueStrain.AllReferences)
                                        {
                                            cntRef++;
                                            <tr>
                                                <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                                <td>@reference</td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                }
                <div style="clear: both"></div>
                @if (Model.Properties.FatigueStress.ConditionList.Count > 0)
                {
                    <div id="stressLife" style="display:@((Model.Properties.FatigueStrain.ConditionList.Count > 0) ? "none" : "normal")">

                        <div class="conditionContent">

                            @if (Model.Properties.FatigueStress.MaterialConditions.Count > 0 && !(Model.Properties.FatigueStress.MaterialConditions.Count == 1 && Model.Properties.FatigueStress.MaterialConditions[0].Text == "As received"))
                            {
                                <div class="conditionName">
                                    Material Condition:
                                </div>
                                @Html.DropDownListFor(o => o.Properties.FatigueStress.MaterialConditions[0].Value, new SelectList(Model.Properties.FatigueStress.MaterialConditions, "Value", "Text"), htmlAttributes: new { @class = "conditions gray", @id = "selectMaterialCondFatigueStress", @onchange = "materialDetails.changeMaterialConditionFatigueStress(" + Model.Material.SourceMaterialId + ");" })
                            }
                        </div>
                        <div id="fatigueStressGroup">
                            @Html.Partial("FatigueStressGroup", Model.Properties.FatigueStress)
                        </div>
                        <div style="clear: both"></div>
                        @if (Model.Properties.FatigueStress.AllReferences != null && Model.Properties.FatigueStress.AllReferences.Count > 0)
                        {
                            <br />
                            <span><a id="allRefPropLinkFatStress" onclick="showAllRefPropFatStress();return false;" href="#">+ </a><b>All references for the selected material</b></span>
                            <br />
                            <div id="allReferencePropFatStress" style="display: none">
                                <table>
                                    <tbody>
                                        @{int cntRef = 0;}
                                        @foreach (var reference in Model.Properties.FatigueStress.AllReferences)
                                        {
                                            cntRef++;
                                            <tr>
                                                <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                                <td>@reference</td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                }

            </div>
        </div>
        <div style="clear: both;"></div>
    }





    @if (Model.Properties.FatiguePlus != null && Model.Properties.FatiguePlus.ConditionList.Count > 0)
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">
                <span class="title">fatigue data  @(Model.Properties.FatiguePlus.ConditionList.Count != 0 ? " (" + Model.Properties.FatiguePlus.ConditionList.Count.ToString() + ")" : "")</span>
            </h4>
            <div class="accordion-content">


                @if (Model.Properties.FatiguePlus.ConditionList.Count > 0)
                {
                    <div id="plusFatigue">
                        <div class="conditionContent">

                            @if (Model.Properties.FatiguePlus.ConditionList != null && Model.Properties.FatiguePlus.ConditionList[0].Text != "")
                            {
                                @:Material Condition: @Html.DropDownListFor(o => o.Properties.FatiguePlus.ConditionList[0].Value, new SelectList(Model.Properties.FatiguePlus.ConditionList, "Value", "Text"), htmlAttributes: new { @class = "conditions gray", @id = "selectCondFatiguePlus", @onchange = "materialDetails.changeConditionFatiguePlus(" + Model.Material.SourceMaterialId + ");" })
                                }
                        </div>
                        <div id="fatiguePlusPerCondition">
                            @Html.Partial("FatiguePlusCondition", Model.Properties.FatiguePlus.ConditionPlus)
                        </div>
                    </div>
                }
            </div>
        </div>
        <div style="clear: both;"></div>
    }

@*MultipointData*@
    @if (Model.Properties.MultipointData != null && Model.Properties.MultipointData.DiagramTypes.Count > 0)
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">

                <span class="title">multipoint data @(Model.Properties.MultipointData.Count != 0 ? " (" + Model.Properties.MultipointData.Count + ")" : "")</span>
            </h4>
            <div class="accordion-content">
                <div class="conditionContent">

                    @if (Model.Properties.MultipointData.DiagramTypes.Count > 0)
                    {
                        @:Diagram types: @Html.DropDownListFor(o => o.Properties.MultipointData.DiagramTypes[0].Type, new SelectList(Model.Properties.MultipointData.DiagramTypes, "Type", "Name"), htmlAttributes: new { @class = "conditions gray", @id = "selectMPDiagramType", @onchange = "materialDetails.changeTypeDiagramMultipointData()" })
                }

                </div>

                <div id="diagramTypes">

                    @Html.Partial("MultipointDataDiagramDetails", Model.Properties.MultipointData.SelectedDiagram)
                </div>

            </div>
        </div>

        <div style="clear: both;"></div>

    }

    @if (Model.Properties.CreepData != null && Model.Properties.CreepData.Conditions.Count > 0)
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">
                <span class="title">creep data @(Model.Properties.CreepData.Conditions.Count != 0 ? " (" + Model.Properties.CreepData.Conditions.Count + ")" : "")</span>
            </h4>
            <div class="accordion-content">
                <div class="conditionContent">
                    @if (Model.Properties.CreepData.MaterialConditions.Count > 0 && !(Model.Properties.CreepData.MaterialConditions.Count == 1 && Model.Properties.CreepData.MaterialConditions[0].Description == "As received"))
                    {

                        <div class="conditionName">
                            Material Condition:
                        </div>
                        @Html.DropDownListFor(o => o.Properties.CreepData.MaterialConditions[0].ConditionId, new SelectList(Model.Properties.CreepData.MaterialConditions, "ConditionId", "Description"), htmlAttributes: new { @class = "conditions gray", @id = "selectCreepDataMaterialCond", @onchange = "materialDetails.changeCreepDataMaterialCond();" })
                    }

                </div>

                <div id="creepGroup">
                    @Html.Partial("CreepGroup", Model.Properties.CreepData)
                </div>
                <div style="clear: both"></div>
                @if (Model.Properties.CreepData.AllReferences != null && Model.Properties.CreepData.AllReferences.Count > 0)
                {
                    <br />
                    <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                    <br />
                    <div id="allReferenceProp_@cnt" style="display:none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in Model.Properties.CreepData.AllReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>

        <div style="clear: both;"></div>

    }
    @if (Model.Properties.CreepPlusData != null && ((Model.Properties.CreepPlusData.Data != null && Model.Properties.CreepPlusData.Data.Properties.Count > 0) || Model.Properties.CreepPlusData.DiagramConditions.Count > 0))
    {
        cnt++;
        <div class="accordion" indexofaccordionparent="@cnt" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            <h4 class="accordion-header" indexofaccordion="@cnt">
                <span class="title">creep data @(Model.Properties.CreepPlusData.DiagramConditions.Count != 0 ? " (" + Model.Properties.CreepPlusData.DiagramConditions.Count + ")" : "")</span>
            </h4>
            <div class="accordion-content">
                <div style="padding-top: 7px; padding-bottom: 7px;">
                    @if (Model.Properties.CreepPlusData.Data != null && Model.Properties.CreepPlusData.Data.Properties.Count > 0 &&
                        Model.Properties.CreepPlusData.DiagramConditions.Count > 0)
                    {
                        @Html.RadioButton("creepData", 1, true, new { id = "" }) <span><b>Data</b></span>
                        @Html.RadioButton("creepData", 2, false) <span><b>Diagrams</b></span>
                    }

                    @if (Model.Properties.CreepPlusData.Data != null && Model.Properties.CreepPlusData.Data.Properties.Count > 0 &&
                        Model.Properties.CreepPlusData.DiagramConditions.Count == 0)
                    {
                        @Html.RadioButton("creepData", 1, true, new { id = "" }) <span><b>Data</b></span>

                    }

                    @if ((Model.Properties.CreepPlusData.Data == null || (Model.Properties.CreepPlusData.Data != null && Model.Properties.CreepPlusData.Data.Properties.Count == 0)) &&
                        Model.Properties.CreepPlusData.DiagramConditions.Count > 0)
                    {
                        @Html.RadioButton("creepData", 2, true, new { id = "" }) <span><b>Diagrams</b></span>
                    }
                </div>



                @if (Model.Properties.CreepPlusData.Data != null && Model.Properties.CreepPlusData.Data.Properties.Count > 0)
                {

                    <div id="creepPlusData" style="width: 100%;">

                        @Html.Partial("CreepPlusData", Model.Properties.CreepPlusData.Data)

                    </div>

                }

                <div style="clear: both"></div>
                @if (Model.Properties.CreepPlusData.DiagramConditions.Count > 0)
                {
                    <div id="creepPlusDiagrams" style="display:@((Model.Properties.CreepPlusData.Data != null && Model.Properties.CreepPlusData.Data.Properties.Count > 0) ? "none" : "normal")">
                        <div class="conditionContent">

                            @if (Model.Properties.CreepPlusData.DiagramConditions.Count > 0)
                            {
                                @:Material Condition: @Html.DropDownListFor(o => o.Properties.CreepPlusData.DiagramConditions[0].ConditionId, new SelectList(Model.Properties.CreepPlusData.DiagramConditions, "ConditionId", "Condition"), htmlAttributes: new { @class = "conditions gray", @id = "selectCreepPlusDataCond", @onchange = "materialDetails.changeCreepPlusDataCond()" })
                    }
                        </div>
                        <div id="creepPlusDiagramPerCondition">

                            @Html.Partial("CreepPlusConditionDiagrams", Model.Properties.CreepPlusData.ConditionData)

                        </div>
                        <div style="clear: both"></div>
                    </div>
                }

                @if (Model.Properties.CreepPlusData.Data.SelectedReferences != null && Model.Properties.CreepPlusData.Data.SelectedReferences.Count > 0)
                {
                    <br />
                    <span><a id="selectedRefCreepPlusLink" onclick="showASelRefCreepPlus();return false;" href="#">+ </a><b>Reference for the selected material and condition</b></span>
                    <br />
                    <div id="selectedRefCreepPlus" style="display: none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in Model.Properties.CreepPlusData.Data.SelectedReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
                <div style="clear: both"></div>
                @if (Model.Properties.CreepPlusData.Data.AllReferences != null && Model.Properties.CreepPlusData.Data.AllReferences.Count > 0)
                {
                    <br />
                    <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                    <br />
                    <div id="allReferenceProp_@cnt" style="display:none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in Model.Properties.CreepPlusData.Data.AllReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
                <div style="clear: both"></div>

            </div>
        </div>

        <div style="clear: both;"></div>

    }

    @foreach (var item in Model.Properties.ProductGroups)
    {
        if (item.Key == ProductGroup.ProductGroupType.Chemical)
        {
            if (Model.Material.SourceId == 1)
            {
        <div class="accordion" indexofaccordionparent="@((int)item.Key)" id="propAccordion_@(((int)item.Key).ToString())">
            <h4 class="accordion-header" indexofaccordion="@((int)item.Key)"  onclick="materialDetails.getPropertyGroupDetails(@((int)item.Key));return false;">
                <span class="title">@item.Value.ProductGroupName @(item.Value.PropertyCount != 0 ? " (" + item.Value.PropertyCount + ")" : "")</span>
            </h4>
            <div class="accordion-content" id="accordion-content_@((int)item.Key)">
                @Html.Partial("GroupContent", item.Value)

            </div>
        </div>
        <div style="clear: both;"></div>
            }
            else
            {
        <div class="accordion" indexofaccordionparent="@((int)item.Key)" id="propAccordion_@(cnt == 1 ? "first" : "other_" + cnt.ToString())">
            @if (Model.Material.SourceId == 3)
            {
                <h4 class="accordion-header" indexofaccordion="@((int)item.Key)">
                    <span class="title">@item.Value.ProductGroupName @(item.Value.PropertyCount != 0 ? " (" + item.Value.PropertyCount + ")" : "")</span>
                </h4>
            }
            else
            {
                <h4 class="accordion-header" indexofaccordion="@((int)item.Key)" onclick="materialDetails.getPropertyGroupDetails(@((int)item.Key));return false;">
                    <span class="title">@item.Value.ProductGroupName @(item.Value.PropertyCount != 0 ? " (" + item.Value.PropertyCount + ")" : "")</span>
                </h4>

            }
            <div class="accordion-content">
                <div class="conditionContent">
                    @if (item.Value.Conditions.Count > 0)
                    {

                        if (!(item.Value.Conditions.Count == 1 && item.Value.Conditions[0].ConditionName == "As received") && item.Value.Conditions[0].ConditionName.Trim() != "")
                        {
                        @:Material Condition: @Html.DropDownListFor(o => o.Properties.ProductGroups[item.Key].ConditionId, new SelectList(item.Value.Conditions, "ConditionId", "ConditionName"), htmlAttributes: new { @class = "conditions gray", @id = "selectCond_" + (int)item.Key, @onchange = "changeCondition(" + (int)item.Key + ");" })
                                  }
                    }

                </div>

                @for (int i = 0; i < item.Value.Conditions.Count; i++)
                {
                    <div id="cond_@((int)item.Key)_@(item.Value.Conditions[i].ConditionId)" style="@((item.Value.Conditions[i].ConditionId == item.Value.ConditionId) ? "" : "display:none;")">
                        @if (item.Value.Conditions[i].Properties != null && item.Value.Conditions[i].Properties.Count > 0)
                        {
                            <table id="tableMaterialDetails_@((int)item.Value.ProductGroupId)" class="details" style="width: 100%; margin-top:0px;">
                                <thead>
                                    <tr>
                                        <th style="width: 35%;">Property</th>
                                        <th style="width: 25%;">Value</th>
                                        <th style="width: 20%;">Unit</th>
                                        <th style="width: 20%;">Note</th>
                                    </tr>
                                </thead>
                                @foreach (var itemP in item.Value.Conditions[i].Properties)
                                {
                                    <tbody>
                                        <tr>
                                            <td class="addToComparisonCell">
                                                @if (item.Value.ProductGroupId != ProductGroup.ProductGroupType.Applications)
                                                {
                                                    <div class="checkbox">
                                                        <input type="checkbox" id="tg_@(itemP.PropertyId)_@((int)item.Value.ProductGroupId)_@(item.Value.Conditions[i].ConditionId)_@(itemP.ValueId)" groupid="@((int)item.Value.ProductGroupId)" conditionid="@item.Value.Conditions[i].ConditionId" rowid="@itemP.ValueId" name="@(itemP.PropertyId)_@(itemP.SourcePropertyId)_@(itemP.ChemicalIdentityId)" typeid="@itemP.PropertyId" sourcepropertyid="@itemP.SourcePropertyId" />
                                                        <label for="tg_@(itemP.PropertyId)_@((int)item.Value.ProductGroupId)_@(item.Value.Conditions[i].ConditionId)_@(itemP.ValueId)"></label>
                                                    </div>
                                                }
                                                <div>
                                                    @Html.Raw(itemP.PropertyName)
                                                </div>
                                            </td>
                                            <td>@Html.Raw(itemP.OrigValue)</td>
                                            <td>@Html.Raw(itemP.OrigUnit)</td>
                                            <td>@Html.Raw(itemP.OrigValueText)</td>
                                        </tr>
                                    </tbody>
                                }
                            </table>
                                if (item.Value.Conditions[i].SelectedReferences != null && item.Value.Conditions[i].SelectedReferences.Count > 0)
                                {
                            <br />
                            <span><a id="selectedRefPropLink_@i" onclick="showSelectedRefProp(@i);return false;" href="#">+ </a><b>Reference for the selected material and condition</b></span>
                            <br />
                            <div id="selectedReferenceProp_@i" style="display:none">
                                <table>
                                    <tbody>
                                        @{int cntRef = 0;}
                                        @foreach (var reference in item.Value.Conditions[i].SelectedReferences)
                                        {
                                            cntRef++;
                                            <tr>
                                                <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                                <td>@reference</td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                                }
                        }
                    </div>
                }
                @if (item.Value.AllReferences != null && item.Value.AllReferences.Count > 0)
                {
                    <br />
                    <span><a id="allRefPropLink_@cnt" onclick="showAllRefProp(@cnt);return false;" href="#">+ </a><b>All references for the selected material</b></span>
                    <br />
                    <div id="allReferenceProp_@cnt" style="display:none">
                        <table>
                            <tbody>
                                @{int cntRef = 0;}
                                @foreach (var reference in item.Value.AllReferences)
                                {
                                    cntRef++;
                                    <tr>
                                        <td style="border-right: none; padding-right: 10px">@cntRef</td>
                                        <td>@reference</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }
            </div>

        </div>
        <div style="clear: both;"></div>
            }
        }

    }

</div>

<script type="text/javascript">
    var stressChecked = false;
    var selectedMaterialId = @Model.Material.MaterialId;
    var selectedSourceMaterialId = @Model.Material.SourceMaterialId;
    var selectedSourceId = @Model.Material.SourceId;
    var selectedSubgroupId = @Model.Material.SubgroupId;
    var selectedBox = null;
    $('.accordion').accordion({ collapsible: true, autoHeight: false });


    $(document).ready(function () {

        @if (!Model.IsChemical)
        {
            <text>materialDetails.selectOneValueForSameProperty();</text>
        }

        materialDetails.openActiveAccordion();

    @if (chekedStressStrain)
    {
		 <text>
        stressChecked = true;
        </text>
    }
        $('input:radio[name="fatigueStrainStress"]').change(function () {
            var radios = $('input:radio[name="fatigueStrainStress"]');

            var val;
            for (var i = 0; i < radios.length; i++) {
                if (radios[i].checked) {
                    val = radios[i].value;
                    if (val == 1) {
                        $('#stressLife').hide();
                        $('#strainLife').show();
                        stressChecked = false;

                    }
                    else {
                        stressChecked = true;
                        $('#stressLife').show();
                        $('#strainLife').hide();

                    }
                    showSelectedRefPropFatigue();
                }
            }
        });

        $('input:radio[name="creepData"]').change(function () {
            var radios = $('input:radio[name="creepData"]');

            var val;
            for (var i = 0; i < radios.length; i++) {
                if (radios[i].checked) {
                    val = radios[i].value;
                    if (val == 1) {
                        $('#creepPlusDiagrams').hide();
                        $('#creepPlusData').show();
                    }
                    else {
                        $('#creepPlusDiagrams').show();
                        $('#creepPlusData').hide();

                    }
                }
            }
        });



        // Plot physical data
      @*  if ('@Html.Raw((int)Model.ProductGroupId)' == '807') {
            physicalPlot.InitData('@Html.Raw(Json.Encode(Model))');
        }
        // Plot mechanical data
        if ('@Html.Raw((int)Model.ProductGroupId)' == '806') {
            mechanicalPlot.InitData('@Html.Raw(Json.Encode(Model))');
            alert('InitMechanical');
        };*@


    });

    function showSelectedRefProp(cnt) {
        var divRef = $('#selectedReferenceProp_' + cnt);
        var closedA = $('#selectedRefPropLink_' + cnt);
        if (closedA[0].innerHTML == "+ ") {
            divRef.show();
            closedA[0].innerHTML = "- ";
        } else {
            divRef.hide();
            closedA[0].innerHTML = "+ ";
        }
    }

    function showAllRefProp(cnt) {
        var divRef = $('#allReferenceProp_' + cnt);
        var closedA = $('#allRefPropLink_' + cnt);
        if (closedA[0].innerHTML == "+ ") {
            divRef.show();
            closedA[0].innerHTML = "- ";
        } else {
            divRef.hide();
            closedA[0].innerHTML = "+ ";
        }
    }

    function showASelRefCreepPlus() {
        var divRef = $('#selectedRefCreepPlus');
        var closedA = $('#selectedRefCreepPlusLink');
        if (closedA[0].innerHTML == "+ ") {
            divRef.show();
            closedA[0].innerHTML = "- ";
        } else {
            divRef.hide();
            closedA[0].innerHTML = "+ ";
        }
    }


    function showAllRefPropFatStress() {
        var divRef = $('#allReferencePropFatStress');
        var closedA = $('#allRefPropLinkFatStress');
        if (closedA[0].innerHTML == "+ ") {
            divRef.show();
            closedA[0].innerHTML = "- ";
        } else {
            divRef.hide();
            closedA[0].innerHTML = "+ ";
        }
    }

    function showSelectedRefPropFatigue() {
        var divRef = $('.selectedReferencePropFatigue');
        var closedA = $('.selectedRefPropLinkFatigue');
        if (closedA[0].innerHTML == "+ ") {
            divRef.show();
            closedA[0].innerHTML = "- ";
        } else {
            divRef.hide();
            closedA[0].innerHTML = "+ ";
        }
    }
</script>
